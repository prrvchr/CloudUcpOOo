#ifndef __com_sun_star_ucb_XRestUser_idl__
#define __com_sun_star_ucb_XRestUser_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XRestDataSource.idl>
#include <com/sun/star/auth/XRestKeyMap.idl>
#include <com/sun/star/uri/XUriReference.idl>
#include <com/sun/star/sdbc/XPreparedStatement.idl>
#include <com/sun/star/io/XInputStream.idl>

module com { module sun { module star { module ucb {

interface XRestUser: com::sun::star::uno::XInterface
{

    boolean initialize([in] string Name);
    ::com::sun::star::uno::XInterface getIdentifier([in] string Url);
    ::com::sun::star::auth::XRestKeyMap getItem([in] ::com::sun::star::auth::XRestKeyMap Identifier);
    ::com::sun::star::sdbc::XPreparedStatement getFolderContent([in] ::com::sun::star::auth::XRestKeyMap Identifier,
                                                                [in] ::com::sun::star::auth::XRestKeyMap Content,
                                                                [out] boolean Updated);
    boolean insertNewDocument([in] string ItemId,
                              [in] string ParentId,
                              [in] ::com::sun::star::auth::XRestKeyMap Content);
    boolean insertNewFolder([in] string ItemId,
                            [in] string ParentId,
                            [in] ::com::sun::star::auth::XRestKeyMap Content);
    short updateLoaded([in] string ItemId,
                       [in] short Value,
                       [in] short Default);
    string updateTitle([in] string ItemId,
                       [in] string ParentId,
                       [in] string Value,
                       [in] string Default);
    long updateSize([in] string ItemId,
                    [in] string ParentId,
                    [in] long Size);
    boolean updateTrashed([in] string ItemId,
                          [in] string ParentId,
                          [in] boolean Value,
                          [in] boolean Default);
    any synchronize([in] any Value);
    boolean isIdentifier([in] string ItemId);
    boolean isChildId([in] string ParentId,
                      [in] string ItemId);
    string selectChildId([in] string ParentId,
                         [in] string Title);
    long countChildTitle([in] string ParentId,
                         [in] string Title);
    void checkNewIdentifier();
    string getNewIdentifier();

    [attribute, readonly] ::com::sun::star::ucb::XRestDataSource DataSource;
    [attribute, readonly] string Id;
    [attribute, readonly] string Name;
    [attribute, readonly] string RootId;
    [attribute, readonly] boolean IsValid;
    [attribute, readonly] string Error;

};


}; }; }; };

#endif
